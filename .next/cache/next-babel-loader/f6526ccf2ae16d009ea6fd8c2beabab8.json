{"ast":null,"code":"var _jsxFileName = \"/Users/federico/Documents/apps/nextjs-tailwind/pages/users/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { useEffect, useState } from \"react\";\nexport default function User({\n  user\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  useEffect(() => {\n    const fetchData = async () => await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${context.query.id}`).json();\n\n    setPosts(fetchData);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"User #\", user.id)), __jsx(\"div\", {\n    className: \"jsx-1404897129\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1404897129\" + \" \" + \"grid grid-template-columns gap-x-6 p-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(\"h1\", {\n    className: \"jsx-1404897129\" + \" \" + \"text-2xl text-center text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, user.name), __jsx(\"h4\", {\n    className: \"jsx-1404897129\" + \" \" + \"text-base text-center text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, user.email), __jsx(\"h4\", {\n    className: \"jsx-1404897129\" + \" \" + \"text-base text-center text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, user.company.name), __jsx(\"h4\", {\n    className: \"jsx-1404897129\" + \" \" + \"text-base text-center text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Posts: \", posts.length), __jsx(\"div\", {\n    className: \"jsx-1404897129\" + \" \" + \"w-36 m-auto flex justify-center mt-16 bg-gray-30 rounded-xl cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"jsx-1404897129\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Back to users\"))), __jsx(_JSXStyle, {\n    id: \"1404897129\",\n    __self: this\n  }, \".grid-template-columns.jsx-1404897129{grid-template-columns:repeat(auto-fill,minmax(250px,1fr));}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mZWRlcmljby9Eb2N1bWVudHMvYXBwcy9uZXh0anMtdGFpbHdpbmQvcGFnZXMvdXNlcnMvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQ29CLEFBR3lFLDBEQUM5RCIsImZpbGUiOiIvVXNlcnMvZmVkZXJpY28vRG9jdW1lbnRzL2FwcHMvbmV4dGpzLXRhaWx3aW5kL3BhZ2VzL3VzZXJzL1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFVzZXIoeyB1c2VyIH0pIHtcbiAgY29uc3QgW3Bvc3RzLCBzZXRQb3N0c10gPSB1c2VTdGF0ZShbXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBmZXRjaERhdGEgPSBhc3luYyAoKSA9PlxuICAgICAgYXdhaXQgZmV0Y2goXG4gICAgICAgIGBodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHM/dXNlcklkPSR7Y29udGV4dC5xdWVyeS5pZH1gXG4gICAgICApLmpzb24oKTtcblxuICAgIHNldFBvc3RzKGZldGNoRGF0YSk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPlVzZXIgI3t1c2VyLmlkfTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zIGdhcC14LTYgcC0xNlwiPjwvZGl2PlxuICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0yeGwgdGV4dC1jZW50ZXIgdGV4dC1ibGFja1wiPnt1c2VyLm5hbWV9PC9oMT5cbiAgICAgICAgPGg0IGNsYXNzTmFtZT1cInRleHQtYmFzZSB0ZXh0LWNlbnRlciB0ZXh0LWJsYWNrXCI+e3VzZXIuZW1haWx9PC9oND5cbiAgICAgICAgPGg0IGNsYXNzTmFtZT1cInRleHQtYmFzZSB0ZXh0LWNlbnRlciB0ZXh0LWJsYWNrXCI+XG4gICAgICAgICAge3VzZXIuY29tcGFueS5uYW1lfVxuICAgICAgICA8L2g0PlxuICAgICAgICA8aDQgY2xhc3NOYW1lPVwidGV4dC1iYXNlIHRleHQtY2VudGVyIHRleHQtYmxhY2tcIj5cbiAgICAgICAgICBQb3N0czoge3Bvc3RzLmxlbmd0aH1cbiAgICAgICAgPC9oND5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LTM2IG0tYXV0byBmbGV4IGp1c3RpZnktY2VudGVyIG10LTE2IGJnLWdyYXktMzAgcm91bmRlZC14bCBjdXJzb3ItcG9pbnRlclwiPlxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdXNlcnNcIj5cbiAgICAgICAgICAgIDxhPkJhY2sgdG8gdXNlcnM8L2E+XG4gICAgICAgICAgPC9MaW5rPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIC5ncmlkLXRlbXBsYXRlLWNvbHVtbnMge1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMjUwcHgsIDFmcikpO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG5cblVzZXIuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKGNvbnRleHQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgKFxuICAgICAgYXdhaXQgZmV0Y2goXG4gICAgICAgIGBodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdXNlcnMvJHtjb250ZXh0LnF1ZXJ5LmlkfWBcbiAgICAgIClcbiAgICApLmpzb24oKTtcblxuICAgIHJldHVybiB7IHVzZXIgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHt9XG59O1xuIl19 */\\n/*@ sourceURL=/Users/federico/Documents/apps/nextjs-tailwind/pages/users/[id].js */\")));\n}\n\nUser.getInitialProps = async context => {\n  try {\n    const user = await (await fetch(`https://jsonplaceholder.typicode.com/users/${context.query.id}`)).json();\n    return {\n      user\n    };\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/federico/Documents/apps/nextjs-tailwind/pages/users/[id].js"],"names":["Link","Head","useEffect","useState","User","user","posts","setPosts","fetchData","fetch","context","query","id","json","name","email","company","length","getInitialProps","error"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACrC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,YAChB,MAAMC,KAAK,CACR,qDAAoDC,OAAO,CAACC,KAAR,CAAcC,EAAG,EAD7D,CAAL,CAEJC,IAFI,EADR;;AAKAN,IAAAA,QAAQ,CAACC,SAAD,CAAR;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAcH,IAAI,CAACO,EAAnB,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA,wCAAc,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDP,IAAI,CAACS,IAAtD,CAFF,EAGE;AAAA,wCAAc,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDT,IAAI,CAACU,KAAvD,CAHF,EAIE;AAAA,wCAAc,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,CAACW,OAAL,CAAaF,IADhB,CAJF,EAOE;AAAA,wCAAc,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUR,KAAK,CAACW,MADhB,CAPF,EAUE;AAAA,wCAAe,4EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CAVF;AAAA;AAAA;AAAA,grFAJF,CADF;AA4BD;;AAEDb,IAAI,CAACc,eAAL,GAAuB,MAAOR,OAAP,IAAmB;AACxC,MAAI;AACF,UAAML,IAAI,GAAG,MAAM,CACjB,MAAMI,KAAK,CACR,8CAA6CC,OAAO,CAACC,KAAR,CAAcC,EAAG,EADtD,CADM,EAIjBC,IAJiB,EAAnB;AAMA,WAAO;AAAER,MAAAA;AAAF,KAAP;AACD,GARD,CAQE,OAAOc,KAAP,EAAc,CAAE;AACnB,CAVD","sourcesContent":["import Link from \"next/link\";\nimport Head from \"next/head\";\nimport { useEffect, useState } from \"react\";\n\nexport default function User({ user }) {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () =>\n      await fetch(\n        `https://jsonplaceholder.typicode.com/posts?userId=${context.query.id}`\n      ).json();\n\n    setPosts(fetchData);\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>User #{user.id}</title>\n      </Head>\n      <div>\n        <div className=\"grid grid-template-columns gap-x-6 p-16\"></div>\n        <h1 className=\"text-2xl text-center text-black\">{user.name}</h1>\n        <h4 className=\"text-base text-center text-black\">{user.email}</h4>\n        <h4 className=\"text-base text-center text-black\">\n          {user.company.name}\n        </h4>\n        <h4 className=\"text-base text-center text-black\">\n          Posts: {posts.length}\n        </h4>\n        <div className=\"w-36 m-auto flex justify-center mt-16 bg-gray-30 rounded-xl cursor-pointer\">\n          <Link href=\"/users\">\n            <a>Back to users</a>\n          </Link>\n        </div>\n        <style jsx>{`\n          .grid-template-columns {\n            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n          }\n        `}</style>\n      </div>\n    </>\n  );\n}\n\nUser.getInitialProps = async (context) => {\n  try {\n    const user = await (\n      await fetch(\n        `https://jsonplaceholder.typicode.com/users/${context.query.id}`\n      )\n    ).json();\n\n    return { user };\n  } catch (error) {}\n};\n"]},"metadata":{},"sourceType":"module"}