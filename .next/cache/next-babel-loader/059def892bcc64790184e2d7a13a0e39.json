{"ast":null,"code":"var _jsxFileName = \"/Users/federico/Documents/apps/nextjs-tailwind/pages/users/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { useEffect, useState } from \"react\";\nimport PostCard from \"../../components/postCard\";\nexport default function User({\n  user\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const fetchData = async () => await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`);\n\n  useEffect(() => {\n    fetchData().then(res => {\n      setLoading(true);\n      res.json().then(res => {\n        setPosts(res);\n        setLoading(false);\n      });\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"User #\", user.id)), __jsx(\"div\", {\n    className: \"jsx-1404897129\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1404897129\" + \" \" + \"w-36 m-auto flex justify-center mt-2 mb-12 bg-gray-30 rounded-xl cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"jsx-1404897129\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Back to users\"))), __jsx(\"h1\", {\n    className: \"jsx-1404897129\" + \" \" + \"text-2xl text-center text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, user.name), __jsx(\"h4\", {\n    className: \"jsx-1404897129\" + \" \" + \"text-base text-center text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, user.email), __jsx(\"h4\", {\n    className: \"jsx-1404897129\" + \" \" + \"text-base text-center text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, user.company.name), __jsx(\"h4\", {\n    className: \"jsx-1404897129\" + \" \" + \"text-xl mt-6 text-center text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Posts: \", loading ? \"Loading\" : posts.length), __jsx(\"div\", {\n    className: \"jsx-1404897129\" + \" \" + \"grid grid-template-columns gap-x-6 p-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, posts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))), __jsx(_JSXStyle, {\n    id: \"1404897129\",\n    __self: this\n  }, \".grid-template-columns.jsx-1404897129{grid-template-columns:repeat(auto-fill,minmax(250px,1fr));}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mZWRlcmljby9Eb2N1bWVudHMvYXBwcy9uZXh0anMtdGFpbHdpbmQvcGFnZXMvdXNlcnMvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4Q29CLEFBR3lFLDBEQUM5RCIsImZpbGUiOiIvVXNlcnMvZmVkZXJpY28vRG9jdW1lbnRzL2FwcHMvbmV4dGpzLXRhaWx3aW5kL3BhZ2VzL3VzZXJzL1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUG9zdENhcmQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvcG9zdENhcmRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVXNlcih7IHVzZXIgfSkge1xuICBjb25zdCBbcG9zdHMsIHNldFBvc3RzXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGZldGNoRGF0YSA9IGFzeW5jICgpID0+XG4gICAgYXdhaXQgZmV0Y2goYGh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cz91c2VySWQ9JHt1c2VyLmlkfWApO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZmV0Y2hEYXRhKCkudGhlbigocmVzKSA9PiB7XG4gICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgcmVzLmpzb24oKS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgc2V0UG9zdHMocmVzKTtcbiAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+VXNlciAje3VzZXIuaWR9PC90aXRsZT5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy0zNiBtLWF1dG8gZmxleCBqdXN0aWZ5LWNlbnRlciBtdC0yIG1iLTEyIGJnLWdyYXktMzAgcm91bmRlZC14bCBjdXJzb3ItcG9pbnRlclwiPlxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdXNlcnNcIj5cbiAgICAgICAgICAgIDxhPkJhY2sgdG8gdXNlcnM8L2E+XG4gICAgICAgICAgPC9MaW5rPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtMnhsIHRleHQtY2VudGVyIHRleHQtYmxhY2tcIj57dXNlci5uYW1lfTwvaDE+XG4gICAgICAgIDxoNCBjbGFzc05hbWU9XCJ0ZXh0LWJhc2UgdGV4dC1jZW50ZXIgdGV4dC1ibGFja1wiPnt1c2VyLmVtYWlsfTwvaDQ+XG4gICAgICAgIDxoNCBjbGFzc05hbWU9XCJ0ZXh0LWJhc2UgdGV4dC1jZW50ZXIgdGV4dC1ibGFja1wiPlxuICAgICAgICAgIHt1c2VyLmNvbXBhbnkubmFtZX1cbiAgICAgICAgPC9oND5cbiAgICAgICAgPGg0IGNsYXNzTmFtZT1cInRleHQteGwgbXQtNiB0ZXh0LWNlbnRlciB0ZXh0LWJsYWNrXCI+XG4gICAgICAgICAgUG9zdHM6IHtsb2FkaW5nID8gXCJMb2FkaW5nXCIgOiBwb3N0cy5sZW5ndGh9XG4gICAgICAgIDwvaDQ+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLXRlbXBsYXRlLWNvbHVtbnMgZ2FwLXgtNiBwLTE2XCI+XG4gICAgICAgICAge3Bvc3RzLm1hcCgocG9zdCkgPT4gKFxuICAgICAgICAgICAgPFBvc3RDYXJkIGtleT17cG9zdC5pZH0gcG9zdD17cG9zdH0gLz5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAuZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zIHtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDI1MHB4LCAxZnIpKTtcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuXG5Vc2VyLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIChjb250ZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IChcbiAgICAgIGF3YWl0IGZldGNoKFxuICAgICAgICBgaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3VzZXJzLyR7Y29udGV4dC5xdWVyeS5pZH1gXG4gICAgICApXG4gICAgKS5qc29uKCk7XG5cbiAgICByZXR1cm4geyB1c2VyIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7fVxufTtcbiJdfQ== */\\n/*@ sourceURL=/Users/federico/Documents/apps/nextjs-tailwind/pages/users/[id].js */\")));\n}\n\nUser.getInitialProps = async context => {\n  try {\n    const user = await (await fetch(`https://jsonplaceholder.typicode.com/users/${context.query.id}`)).json();\n    return {\n      user\n    };\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/federico/Documents/apps/nextjs-tailwind/pages/users/[id].js"],"names":["Link","Head","useEffect","useState","PostCard","User","user","posts","setPosts","loading","setLoading","fetchData","fetch","id","then","res","json","name","email","company","length","map","post","getInitialProps","context","query","error"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACrC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMQ,SAAS,GAAG,YAChB,MAAMC,KAAK,CAAE,qDAAoDN,IAAI,CAACO,EAAG,EAA9D,CADb;;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,GAAGG,IAAZ,CAAkBC,GAAD,IAAS;AACxBL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBC,GAAD,IAAS;AACvBP,QAAAA,QAAQ,CAACO,GAAD,CAAR;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHD;AAID,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAcJ,IAAI,CAACO,EAAnB,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,iFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF,EAME;AAAA,wCAAc,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDP,IAAI,CAACW,IAAtD,CANF,EAOE;AAAA,wCAAc,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDX,IAAI,CAACY,KAAvD,CAPF,EAQE;AAAA,wCAAc,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,IAAI,CAACa,OAAL,CAAaF,IADhB,CARF,EAWE;AAAA,wCAAc,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUR,OAAO,GAAG,SAAH,GAAeF,KAAK,CAACa,MADtC,CAXF,EAcE;AAAA,wCAAe,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACc,GAAN,CAAWC,IAAD,IACT,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACT,EAApB;AAAwB,IAAA,IAAI,EAAES,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAdF;AAAA;AAAA;AAAA,goGAJF,CADF;AAgCD;;AAEDjB,IAAI,CAACkB,eAAL,GAAuB,MAAOC,OAAP,IAAmB;AACxC,MAAI;AACF,UAAMlB,IAAI,GAAG,MAAM,CACjB,MAAMM,KAAK,CACR,8CAA6CY,OAAO,CAACC,KAAR,CAAcZ,EAAG,EADtD,CADM,EAIjBG,IAJiB,EAAnB;AAMA,WAAO;AAAEV,MAAAA;AAAF,KAAP;AACD,GARD,CAQE,OAAOoB,KAAP,EAAc,CAAE;AACnB,CAVD","sourcesContent":["import Link from \"next/link\";\nimport Head from \"next/head\";\nimport { useEffect, useState } from \"react\";\nimport PostCard from \"../../components/postCard\";\n\nexport default function User({ user }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchData = async () =>\n    await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`);\n\n  useEffect(() => {\n    fetchData().then((res) => {\n      setLoading(true);\n      res.json().then((res) => {\n        setPosts(res);\n        setLoading(false);\n      });\n    });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>User #{user.id}</title>\n      </Head>\n      <div>\n        <div className=\"w-36 m-auto flex justify-center mt-2 mb-12 bg-gray-30 rounded-xl cursor-pointer\">\n          <Link href=\"/users\">\n            <a>Back to users</a>\n          </Link>\n        </div>\n        <h1 className=\"text-2xl text-center text-black\">{user.name}</h1>\n        <h4 className=\"text-base text-center text-black\">{user.email}</h4>\n        <h4 className=\"text-base text-center text-black\">\n          {user.company.name}\n        </h4>\n        <h4 className=\"text-xl mt-6 text-center text-black\">\n          Posts: {loading ? \"Loading\" : posts.length}\n        </h4>\n        <div className=\"grid grid-template-columns gap-x-6 p-16\">\n          {posts.map((post) => (\n            <PostCard key={post.id} post={post} />\n          ))}\n        </div>\n        <style jsx>{`\n          .grid-template-columns {\n            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n          }\n        `}</style>\n      </div>\n    </>\n  );\n}\n\nUser.getInitialProps = async (context) => {\n  try {\n    const user = await (\n      await fetch(\n        `https://jsonplaceholder.typicode.com/users/${context.query.id}`\n      )\n    ).json();\n\n    return { user };\n  } catch (error) {}\n};\n"]},"metadata":{},"sourceType":"module"}